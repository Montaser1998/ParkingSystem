# This file is the top-most EditorConfig file
root = true

# Universal settings for all file types
[*]
indent_style = space
indent_size = 4
end_of_line = lf
charset = utf-8
trim_trailing_whitespace = true
insert_final_newline = true

# Settings for C# files
[*.cs]

#================================#
#     .NET Code Style Rules      #
#================================#
# Severity: none, suggestion, warning, error

# 'this.' qualification
dotnet_style_qualification_for_field = false:suggestion
dotnet_style_qualification_for_property = false:suggestion
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_event = false:suggestion

# Language keywords instead of framework type names for type references
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = true:suggestion

# Use 'var' preferences
csharp_style_var_for_built_in_types = true:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion
csharp_style_var_elsewhere = false:suggestion

# Use expression-bodied members
csharp_style_expression_bodied_methods = true:suggestion
csharp_style_expression_bodied_constructors = false
csharp_style_expression_bodied_properties = true:suggestion
csharp_style_expression_bodied_accessors = true:suggestion

# Order modifiers
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:suggestion

# Place using directives outside of namespace
csharp_using_directive_placement = outside_namespace:suggestion

#================================#
#   .NET Code Quality Rules      #
#================================#
# (These are rules from Roslyn analyzers)

# Remove unused parameters
dotnet_code_quality_unused_parameters = all:suggestion

# Apply correct modifier for non-public members (e.g., suggest 'internal' if not used outside assembly)
dotnet_code_quality_visibility = internal:suggestion

#================================#
#   .NET Naming Conventions      #
#================================#

# Interfaces should start with 'I'
dotnet_naming_rule.interface_should_be_pascal_case_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_pascal_case_with_i.style = pascal_case_with_i
dotnet_naming_rule.interface_should_be_pascal_case_with_i.severity = suggestion

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_style.pascal_case_with_i.required_prefix = I
dotnet_naming_style.pascal_case_with_i.capitalization = pascal_case